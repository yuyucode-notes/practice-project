// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


// 角色
model User {
  id          Int          @id @unique @default(autoincrement())
  email       String       @unique
  name        String?
  role        Role?        @default(USER)
  info        Info?
  articles    Article[]
  sharecards  ShareCard[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

// 角色信息
model Info {
  userId     Int       @unique
  user       User      @relation(fields: userId, references: id)
  age        Int?
  sex        Sex?      @default(MALE)
  address    String?
  phone      Int?
  job        String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

// 角色性别
enum Sex {
  MALE
  FAMALE
}

// 角色权限定位
enum Role {
  USER
  ADMIN
  SUPERADMIN
}

// 文章
model Article {
  id         Int           @id @default(autoincrement())
  title      String
  like       Int?          @default(0)
  brower     Int?          @default(0)
  body       String        @db.Text
  cover      String
  tabs       ArticleTab[]
  published  Boolean?      @default(false)
  userId     Int
  user       User?         @relation(fields: [userId], references: [id])
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
}



// 文章关联tab
model ArticleTab {
  id         Int             @id @default(autoincrement())
  articleId  Int
  article    Article         @relation(fields: [articleId], references: [id])
  name       ArticleTabName
}

// 文章tab列表
model ArticleTabList{
  id    Int  @id @default(autoincrement())
  name  ArticleTabName  @unique
}

// 文章技术类型名字
enum ArticleTabName {
  Not
  Html
  Css
  Javascript
  Typescript
  ECMAScript
  Nodejs
  Vue
  React
  Git
}

// 分享卡片
model ShareCard {
  id         Int       @id @default(autoincrement())
  src        String
  title      String
  describe   String
  look       Int?      @default(0)
  like       Int?      @default(0)
  published  Boolean?  @default(false)
  userId     Int
  user       User?     @relation(fields: [userId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}
